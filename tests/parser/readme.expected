Block(
  statements = Vector(
    OpSeq(seq = Vector(Identifier(name = "module", meta = None), Identifier(name = "😿😿", meta = None)), meta = None),
    OpSeq(
      seq = Vector(
        Identifier(name = "me", meta = None),
        Identifier(name = ":", meta = None),
        Identifier(name = "String", meta = None),
        Identifier(name = "=", meta = None),
        StringLiteral(value = "インターネット・エンジェル", meta = None)
      ),
      meta = None
    ),
    OpSeq(
      seq = Vector(
        Identifier(name = "world", meta = None),
        Identifier(name = "=", meta = None),
        Block(
          statements = Vector(
            OpSeq(
              seq = Vector(
                Identifier(name = "execute", meta = None),
                Identifier(name = "=", meta = None),
                Tuple(
                  terms = Vector(
                    OpSeq(
                      seq = Vector(
                        Identifier(name = "me", meta = None),
                        Identifier(name = ":", meta = None),
                        Identifier(name = "String", meta = None)
                      ),
                      meta = None
                    )
                  ),
                  meta = None
                ),
                Identifier(name = "|->", meta = None),
                Identifier(name = "me", meta = None)
              ),
              meta = None
            )
          ),
          result = None,
          meta = None
        )
      ),
      meta = None
    ),
    DotCall(
      expr = Identifier(name = "world", meta = None),
      field = Identifier(name = "execute", meta = None),
      telescope = Vector(Tuple(terms = Vector(Identifier(name = "me", meta = None)), meta = None)),
      meta = None
    ),
    OpSeq(
      seq = Vector(
        Identifier(name = "data", meta = None),
        Keyword(key = "abstract", telescope = Vector(), meta = None),
        Identifier(name = "舞", meta = None),
        Identifier(name = "extends", meta = None),
        Identifier(name = "Show", meta = None)
      ),
      meta = None
    ),
    OpSeq(
      seq = Vector(
        Identifier(name = "@", meta = None),
        FunctionCall(
          function = Identifier(name = "derive", meta = None),
          telescope = Tuple(terms = Vector(Identifier(name = "Show", meta = None)), meta = None),
          meta = None
        ),
        Identifier(name = "data", meta = None),
        Identifier(name = "超会議", meta = None),
        Identifier(name = "extends", meta = None),
        Identifier(name = "舞", meta = None),
        Block(
          statements = Vector(
            OpSeq(
              seq = Vector(
                Identifier(name = "field", meta = None),
                Identifier(name = "year", meta = None),
                Identifier(name = ":", meta = None),
                Identifier(name = "Nat", meta = None)
              ),
              meta = None
            )
          ),
          result = None,
          meta = None
        )
      ),
      meta = None
    ),
    OpSeq(
      seq = Vector(
        Identifier(name = "@", meta = None),
        FunctionCall(
          function = Identifier(name = "derive", meta = None),
          telescope = Tuple(terms = Vector(Identifier(name = "Show", meta = None)), meta = None),
          meta = None
        ),
        Identifier(name = "data", meta = None),
        Identifier(name = "InternetOverdose", meta = None),
        Identifier(name = "extends", meta = None),
        Identifier(name = "舞", meta = None)
      ),
      meta = None
    ),
    OpSeq(
      seq = Vector(
        Identifier(name = "it", meta = None),
        Identifier(name = ":", meta = None),
        Identifier(name = "Type", meta = None),
        Identifier(name = "=", meta = None),
        Identifier(name = "InternetOverdose", meta = None)
      ),
      meta = None
    ),
    OpSeq(
      seq = Vector(
        Identifier(name = "i", meta = None),
        Identifier(name = ":", meta = None),
        Identifier(name = "InternetOverdose", meta = None),
        Identifier(name = "=", meta = None),
        Identifier(name = "InternetOverdose", meta = None)
      ),
      meta = None
    ),
    OpSeq(
      seq = Vector(
        Identifier(name = "ia", meta = None),
        Identifier(name = ":", meta = None),
        Identifier(name = "Any", meta = None),
        Identifier(name = "=", meta = None),
        Identifier(name = "InternetOverdose", meta = None)
      ),
      meta = None
    ),
    OpSeq(
      seq = Vector(
        Identifier(name = "data", meta = None),
        Keyword(key = "sealed", telescope = Vector(), meta = None),
        Keyword(key = "abstract", telescope = Vector(), meta = None),
        FunctionCall(
          function = Identifier(name = "Expr", meta = None),
          telescope = ListExpr(
            terms = Vector(
              OpSeq(
                seq = Vector(
                  Identifier(name = "T", meta = None),
                  Identifier(name = ":", meta = None),
                  Identifier(name = "Type", meta = None)
                ),
                meta = None
              )
            ),
            meta = None
          ),
          meta = None
        ),
        Identifier(name = ":", meta = None),
        Identifier(name = "Type", meta = None),
        Block(
          statements = Vector(
            OpSeq(
              seq = Vector(
                Identifier(name = "eval", meta = None),
                Identifier(name = ":", meta = None),
                Identifier(name = "T", meta = None)
              ),
              meta = None
            )
          ),
          result = None,
          meta = None
        )
      ),
      meta = None
    ),
    OpSeq(
      seq = Vector(
        Identifier(name = "data", meta = None),
        Identifier(name = "IVal", meta = None),
        Identifier(name = "extends", meta = None),
        FunctionCall(
          function = Identifier(name = "Expr", meta = None),
          telescope = ListExpr(terms = Vector(Identifier(name = "Integer", meta = None)), meta = None),
          meta = None
        ),
        Block(
          statements = Vector(
            OpSeq(
              seq = Vector(
                Identifier(name = "field", meta = None),
                Identifier(name = "val", meta = None),
                Identifier(name = ":", meta = None),
                Identifier(name = "Integer", meta = None)
              ),
              meta = None
            ),
            OpSeq(
              seq = Vector(
                Keyword(key = "override", telescope = Vector(), meta = None),
                Identifier(name = "eval", meta = None),
                Identifier(name = "=", meta = None),
                Identifier(name = "val", meta = None)
              ),
              meta = None
            )
          ),
          result = None,
          meta = None
        )
      ),
      meta = None
    ),
    OpSeq(
      seq = Vector(
        Identifier(name = "ival0", meta = None),
        Identifier(name = ":", meta = None),
        Identifier(name = "IVal", meta = None),
        Identifier(name = "=", meta = None),
        Identifier(name = "IVal", meta = None),
        ObjectExpr(
          clauses = Vector(
            ObjectExprClause(key = Identifier(name = "val", meta = None), value = IntegerLiteral(value = 0, meta = None))
          ),
          meta = None
        )
      ),
      meta = None
    ),
    OpSeq(
      seq = Vector(
        Identifier(name = "data", meta = None),
        Identifier(name = "BVal", meta = None),
        Identifier(name = "extends", meta = None),
        FunctionCall(
          function = Identifier(name = "Expr", meta = None),
          telescope = ListExpr(terms = Vector(Identifier(name = "Boolean", meta = None)), meta = None),
          meta = None
        ),
        Block(
          statements = Vector(
            OpSeq(
              seq = Vector(
                Identifier(name = "field", meta = None),
                Identifier(name = "val", meta = None),
                Identifier(name = ":", meta = None),
                Identifier(name = "Boolean", meta = None)
              ),
              meta = None
            ),
            OpSeq(
              seq = Vector(
                Keyword(key = "override", telescope = Vector(), meta = None),
                Identifier(name = "eval", meta = None),
                Identifier(name = "=", meta = None),
                Identifier(name = "val", meta = None)
              ),
              meta = None
            )
          ),
          result = None,
          meta = None
        )
      ),
      meta = None
    ),
    OpSeq(
      seq = Vector(
        Identifier(name = "data", meta = None),
        Keyword(key = "sealed", telescope = Vector(), meta = None),
        Keyword(key = "abstract", telescope = Vector(), meta = None),
        FunctionCall(
          function = Identifier(name = "Vector", meta = None),
          telescope = ListExpr(
            terms = Vector(
              OpSeq(
                seq = Vector(
                  Identifier(name = "n", meta = None),
                  Identifier(name = ":", meta = None),
                  Identifier(name = "Nat", meta = None)
                ),
                meta = None
              ),
              OpSeq(
                seq = Vector(
                  Identifier(name = "T", meta = None),
                  Identifier(name = ":", meta = None),
                  Identifier(name = "Type", meta = None)
                ),
                meta = None
              )
            ),
            meta = None
          ),
          meta = None
        )
      ),
      meta = None
    ),
    OpSeq(
      seq = Vector(
        Identifier(name = "data", meta = None),
        Identifier(name = "Nil", meta = None),
        Identifier(name = "extends", meta = None),
        FunctionCall(
          function = Identifier(name = "Vector", meta = None),
          telescope = ListExpr(
            terms = Vector(IntegerLiteral(value = 0, meta = None), Identifier(name = "T", meta = None)),
            meta = None
          ),
          meta = None
        ),
        ObjectExpr(clauses = Vector(), meta = None)
      ),
      meta = None
    ),
    OpSeq(
      seq = Vector(
        Identifier(name = "data", meta = None),
        Identifier(name = "Cons", meta = None),
        Identifier(name = "extends", meta = None),
        FunctionCall(
          function = Identifier(name = "Vector", meta = None),
          telescope = ListExpr(
            terms = Vector(
              FunctionCall(
                function = Identifier(name = "succ", meta = None),
                telescope = Tuple(terms = Vector(Identifier(name = "n", meta = None)), meta = None),
                meta = None
              ),
              Identifier(name = "T", meta = None)
            ),
            meta = None
          ),
          meta = None
        ),
        Block(
          statements = Vector(
            OpSeq(
              seq = Vector(
                Identifier(name = "field", meta = None),
                Identifier(name = "head", meta = None),
                Identifier(name = ":", meta = None),
                Identifier(name = "T", meta = None)
              ),
              meta = None
            ),
            OpSeq(
              seq = Vector(
                Identifier(name = "field", meta = None),
                Identifier(name = "tail", meta = None),
                Identifier(name = ":", meta = None),
                FunctionCall(
                  function = Identifier(name = "Vector", meta = None),
                  telescope = ListExpr(
                    terms = Vector(Identifier(name = "n", meta = None), Identifier(name = "T", meta = None)),
                    meta = None
                  ),
                  meta = None
                )
              ),
              meta = None
            )
          ),
          result = None,
          meta = None
        )
      ),
      meta = None
    ),
    OpSeq(
      seq = Vector(
        Identifier(name = "proof1", meta = None),
        Identifier(name = ":", meta = None),
        Identifier(name = "Nil", meta = None),
        Identifier(name = "=", meta = None),
        Identifier(name = "Nil", meta = None)
      ),
      meta = None
    ),
    OpSeq(
      seq = Vector(
        Identifier(name = "proof1", meta = None),
        Identifier(name = "=", meta = None),
        Identifier(name = "?", meta = None),
        Identifier(name = "hole", meta = None)
      ),
      meta = None
    ),
    OpSeq(
      seq = Vector(
        Identifier(name = "tuple0", meta = None),
        Identifier(name = ":", meta = None),
        FunctionCall(
          function = Identifier(name = "TupleN", meta = None),
          telescope = ListExpr(terms = Vector(Identifier(name = "Integer", meta = None)), meta = None),
          meta = None
        )
      ),
      meta = None
    ),
    OpSeq(
      seq = Vector(
        Identifier(name = "tuple0", meta = None),
        Identifier(name = "=", meta = None),
        Tuple(
          terms = Vector(
            IntegerLiteral(value = 1, meta = None),
            IntegerLiteral(value = 1, meta = None),
            IntegerLiteral(value = 1, meta = None)
          ),
          meta = None
        )
      ),
      meta = None
    ),
    OpSeq(
      seq = Vector(
        Identifier(name = "tuple1", meta = None),
        Identifier(name = ":", meta = None),
        FunctionCall(
          function = Identifier(name = "Tuple", meta = None),
          telescope = ListExpr(
            terms = Vector(
              Identifier(name = "Integer", meta = None),
              Identifier(name = "Integer", meta = None),
              Identifier(name = "Integer", meta = None)
            ),
            meta = None
          ),
          meta = None
        ),
        Identifier(name = "=", meta = None),
        Tuple(
          terms = Vector(
            IntegerLiteral(value = 1, meta = None),
            IntegerLiteral(value = 1, meta = None),
            IntegerLiteral(value = 1, meta = None)
          ),
          meta = None
        )
      ),
      meta = None
    ),
    OpSeq(
      seq = Vector(
        Identifier(name = "tuple0ToLisst", meta = None),
        Identifier(name = ":", meta = None),
        FunctionCall(
          function = Identifier(name = "List", meta = None),
          telescope = ListExpr(terms = Vector(Identifier(name = "Integer", meta = None)), meta = None),
          meta = None
        ),
        Identifier(name = "=", meta = None),
        DotCall(
          expr = Identifier(name = "tuple0", meta = None),
          field = Identifier(name = "toList", meta = None),
          telescope = Vector(),
          meta = None
        )
      ),
      meta = None
    ),
    OpSeq(
      seq = Vector(
        Identifier(name = "list0", meta = None),
        Identifier(name = ":", meta = None),
        FunctionCall(
          function = Identifier(name = "List", meta = None),
          telescope = ListExpr(terms = Vector(Identifier(name = "Integer", meta = None)), meta = None),
          meta = None
        ),
        Identifier(name = "=", meta = None),
        ListExpr(
          terms = Vector(
            IntegerLiteral(value = 1, meta = None),
            IntegerLiteral(value = 1, meta = None),
            IntegerLiteral(value = 1, meta = None)
          ),
          meta = None
        )
      ),
      meta = None
    ),
    OpSeq(
      seq = Vector(
        Identifier(name = "list0ToTuple", meta = None),
        Identifier(name = ":", meta = None),
        FunctionCall(
          function = Identifier(name = "TupleN", meta = None),
          telescope = ListExpr(terms = Vector(Identifier(name = "Integer", meta = None)), meta = None),
          meta = None
        ),
        Identifier(name = "=", meta = None),
        DotCall(
          expr = Identifier(name = "list0", meta = None),
          field = Identifier(name = "toTuple", meta = None),
          telescope = Vector(),
          meta = None
        )
      ),
      meta = None
    ),
    OpSeq(
      seq = Vector(
        Identifier(name = "extension", meta = None),
        ListExpr(terms = Vector(Identifier(name = "T", meta = None)), meta = None),
        Tuple(
          terms = Vector(
            OpSeq(
              seq = Vector(
                Identifier(name = "list", meta = None),
                Identifier(name = ":", meta = None),
                FunctionCall(
                  function = Identifier(name = "List", meta = None),
                  telescope = ListExpr(terms = Vector(Identifier(name = "T", meta = None)), meta = None),
                  meta = None
                )
              ),
              meta = None
            )
          ),
          meta = None
        ),
        Block(
          statements = Vector(
            OpSeq(
              seq = Vector(
                FunctionCall(
                  function = FunctionCall(
                    function = Identifier(name = "map1", meta = None),
                    telescope = ListExpr(
                      terms = Vector(
                        OpSeq(
                          seq = Vector(
                            Identifier(name = "e", meta = None),
                            Identifier(name = ":", meta = None),
                            Identifier(name = "Effect", meta = None)
                          ),
                          meta = None
                        ),
                        Identifier(name = "U", meta = None)
                      ),
                      meta = None
                    ),
                    meta = None
                  ),
                  telescope = Tuple(
                    terms = Vector(
                      OpSeq(
                        seq = Vector(
                          Identifier(name = "f", meta = None),
                          Identifier(name = ":", meta = None),
                          Identifier(name = "T", meta = None),
                          Identifier(name = "->", meta = None),
                          Identifier(name = "e", meta = None),
                          Identifier(name = "U", meta = None)
                        ),
                        meta = None
                      )
                    ),
                    meta = None
                  ),
                  meta = None
                ),
                Identifier(name = ":", meta = None),
                Identifier(name = "e", meta = None),
                FunctionCall(
                  function = Identifier(name = "List", meta = None),
                  telescope = ListExpr(terms = Vector(Identifier(name = "U", meta = None)), meta = None),
                  meta = None
                ),
                Identifier(name = "=", meta = None),
                Identifier(name = "?", meta = None),
                Identifier(name = "todo", meta = None)
              ),
              meta = None
            )
          ),
          result = None,
          meta = None
        )
      ),
      meta = None
    ),
    OpSeq(
      seq = Vector(Identifier(name = "pragma", meta = None), Keyword(key = "UnsizedType", telescope = Vector(), meta = None)),
      meta = None
    ),
    OpSeq(
      seq = Vector(
        Identifier(name = "Expr", meta = None),
        Identifier(name = "=", meta = None),
        Identifier(name = "Integer", meta = None),
        Identifier(name = "|", meta = None),
        Identifier(name = "String", meta = None),
        Identifier(name = "|", meta = None),
        FunctionCall(
          function = Identifier(name = "List", meta = None),
          telescope = ListExpr(terms = Vector(Identifier(name = "Expr", meta = None)), meta = None),
          meta = None
        )
      ),
      meta = None
    ),
    OpSeq(seq = Vector(Identifier(name = "enableEffect", meta = None), Identifier(name = "IO", meta = None)), meta = None),
    OpSeq(
      seq = Vector(
        FunctionCall(
          function = Identifier(name = "functionCanEmitEffect", meta = None),
          telescope = Tuple(terms = Vector(), meta = None),
          meta = None
        ),
        Identifier(name = ":", meta = None),
        Identifier(name = "Unit", meta = None),
        Identifier(name = "=", meta = None),
        FunctionCall(
          function = Identifier(name = "println", meta = None),
          telescope = Tuple(terms = Vector(StringLiteral(value = "はっぱ - もうすぐ楽になるからね", meta = None)), meta = None),
          meta = None
        )
      ),
      meta = None
    )
  ),
  result = None,
  meta = None
)