Block(
  statements = Vector(
    OpSeq(seq = Vector(Identifier(name = "module", meta = None), Identifier(name = "ðŸ˜¿ðŸ˜¿", meta = None)), meta = None),
    OpSeq(
      seq = Vector(
        Identifier(name = "trait", meta = None),
        Keyword(key = "sealed", telescope = Vector(), meta = None),
        FunctionCall(
          function = Identifier(name = "Vector", meta = None),
          telescope = ListExpr(
            terms = Vector(
              OpSeq(
                seq = Vector(
                  Identifier(name = "n", meta = None),
                  Identifier(name = ":", meta = None),
                  Identifier(name = "Nat", meta = None)
                ),
                meta = None
              ),
              OpSeq(
                seq = Vector(
                  Identifier(name = "T", meta = None),
                  Identifier(name = ":", meta = None),
                  Identifier(name = "Type", meta = None)
                ),
                meta = None
              )
            ),
            meta = None
          ),
          meta = None
        )
      ),
      meta = None
    ),
    OpSeq(
      seq = Vector(
        Identifier(name = "data", meta = None),
        Identifier(name = "Nil", meta = None),
        Identifier(name = "<:", meta = None),
        FunctionCall(
          function = Identifier(name = "Vector", meta = None),
          telescope = ListExpr(
            terms = Vector(IntegerLiteral(value = 0, meta = None), Identifier(name = "T", meta = None)),
            meta = None
          ),
          meta = None
        )
      ),
      meta = None
    ),
    OpSeq(
      seq = Vector(
        Identifier(name = "data", meta = None),
        FunctionCall(
          function = Identifier(name = "Cons", meta = None),
          telescope = ListExpr(
            terms = Vector(Identifier(name = "n", meta = None), Identifier(name = "T", meta = None)),
            meta = None
          ),
          meta = None
        ),
        Identifier(name = "<:", meta = None),
        FunctionCall(
          function = Identifier(name = "Vector", meta = None),
          telescope = ListExpr(
            terms = Vector(
              FunctionCall(
                function = Identifier(name = "succ", meta = None),
                telescope = Tuple(terms = Vector(Identifier(name = "n", meta = None)), meta = None),
                meta = None
              ),
              Identifier(name = "T", meta = None)
            ),
            meta = None
          ),
          meta = None
        ),
        Block(
          statements = Vector(
            OpSeq(
              seq = Vector(
                Identifier(name = "head", meta = None),
                Identifier(name = ":", meta = None),
                Identifier(name = "T", meta = None)
              ),
              meta = None
            ),
            OpSeq(
              seq = Vector(
                Identifier(name = "tail", meta = None),
                Identifier(name = ":", meta = None),
                FunctionCall(
                  function = Identifier(name = "Vector", meta = None),
                  telescope = ListExpr(
                    terms = Vector(Identifier(name = "n", meta = None), Identifier(name = "T", meta = None)),
                    meta = None
                  ),
                  meta = None
                )
              ),
              meta = None
            )
          ),
          result = None,
          meta = None
        )
      ),
      meta = None
    ),
    OpSeq(
      seq = Vector(
        Identifier(name = "cons1", meta = None),
        Identifier(name = "=", meta = None),
        FunctionCall(
          function = Identifier(name = "Cons", meta = None),
          telescope = Tuple(
            terms = Vector(IntegerLiteral(value = 0, meta = None), Identifier(name = "Nil", meta = None)),
            meta = None
          ),
          meta = None
        )
      ),
      meta = None
    ),
    OpSeq(
      seq = Vector(
        Identifier(name = "cons2", meta = None),
        Identifier(name = "=", meta = None),
        Identifier(name = "Cons", meta = None),
        ObjectExpr(
          clauses = Vector(
            ObjectExprClause(key = Identifier(name = "head", meta = None), value = IntegerLiteral(value = 0, meta = None)),
            ObjectExprClause(key = Identifier(name = "tail", meta = None), value = Identifier(name = "Nil", meta = None))
          ),
          meta = None
        )
      ),
      meta = None
    ),
    OpSeq(
      seq = Vector(
        Identifier(name = "implement", meta = None),
        FunctionCall(
          function = Identifier(name = "Vector", meta = None),
          telescope = ListExpr(
            terms = Vector(Identifier(name = "n", meta = None), Identifier(name = "T", meta = None)),
            meta = None
          ),
          meta = None
        ),
        Block(
          statements = Vector(
            OpSeq(
              seq = Vector(
                Identifier(name = "isEmpty", meta = None),
                Identifier(name = ":", meta = None),
                Identifier(name = "Boolean", meta = None),
                Identifier(name = "=", meta = None),
                Identifier(name = "?", meta = None),
                Identifier(name = "todo", meta = None)
              ),
              meta = None
            )
          ),
          result = None,
          meta = None
        )
      ),
      meta = None
    ),
    OpSeq(
      seq = Vector(
        Identifier(name = "module", meta = None),
        Identifier(name = "Vector", meta = None),
        Block(
          statements = Vector(
            OpSeq(
              seq = Vector(
                FunctionCall(
                  function = Identifier(name = "empty", meta = None),
                  telescope = ListExpr(terms = Vector(Identifier(name = "T", meta = None)), meta = None),
                  meta = None
                ),
                Identifier(name = ":", meta = None),
                FunctionCall(
                  function = Identifier(name = "Vector", meta = None),
                  telescope = ListExpr(
                    terms = Vector(IntegerLiteral(value = 0, meta = None), Identifier(name = "T", meta = None)),
                    meta = None
                  ),
                  meta = None
                ),
                Identifier(name = "=", meta = None),
                Identifier(name = "Nil", meta = None)
              ),
              meta = None
            )
          ),
          result = None,
          meta = None
        )
      ),
      meta = None
    )
  ),
  result = None,
  meta = None
)