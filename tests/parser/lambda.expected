Block(
  statements = Vector(
    OpSeq(
      seq = Vector(
        Identifier(name = "matchingLambda", meta = None),
        Identifier(name = "=", meta = None),
        Block(
          statements = Vector(
            OpSeq(
              seq = Vector(
                Identifier(name = "case", meta = None),
                IntegerLiteral(value = 1, meta = None),
                Identifier(name = "=>", meta = None),
                IntegerLiteral(value = 0, meta = None)
              ),
              meta = None
            ),
            OpSeq(
              seq = Vector(
                Identifier(name = "case", meta = None),
                IntegerLiteral(value = 2, meta = None),
                Identifier(name = "=>", meta = None),
                IntegerLiteral(value = 2, meta = None)
              ),
              meta = None
            )
          ),
          result = None,
          meta = None
        )
      ),
      meta = None
    ),
    OpSeq(
      seq = Vector(
        Identifier(name = "functionType", meta = None),
        Identifier(name = "=", meta = None),
        Identifier(name = "Integer", meta = None),
        Identifier(name = "=>", meta = None),
        Identifier(name = "Integer", meta = None)
      ),
      meta = None
    ),
    OpSeq(
      seq = Vector(
        Identifier(name = "functionSimple", meta = None),
        Identifier(name = "=", meta = None),
        Identifier(name = "x", meta = None),
        Identifier(name = "->", meta = None),
        Identifier(name = "x", meta = None),
        Identifier(name = "+", meta = None),
        IntegerLiteral(value = 1, meta = None)
      ),
      meta = None
    ),
    OpSeq(
      seq = Vector(
        Identifier(name = "blockingFunction", meta = None),
        Identifier(name = "=", meta = None),
        Block(
          statements = Vector(
            OpSeq(
              seq = Vector(
                Identifier(name = "x", meta = None),
                Identifier(name = "->", meta = None),
                Identifier(name = "let", meta = None),
                Identifier(name = "y", meta = None),
                Identifier(name = "=", meta = None),
                Identifier(name = "x", meta = None),
                Identifier(name = "+", meta = None),
                IntegerLiteral(value = 1, meta = None)
              ),
              meta = None
            )
          ),
          result = Some(Identifier(name = "y", meta = None)),
          meta = None
        )
      ),
      meta = None
    ),
    OpSeq(
      seq = Vector(
        Identifier(name = "complexFunction", meta = None),
        Identifier(name = "=", meta = None),
        ListExpr(terms = Vector(Identifier(name = "T", meta = None)), meta = None),
        Tuple(
          terms = Vector(
            OpSeq(
              seq = Vector(
                Identifier(name = "x", meta = None),
                Identifier(name = ":", meta = None),
                Identifier(name = "T", meta = None)
              ),
              meta = None
            )
          ),
          meta = None
        ),
        Identifier(name = "->", meta = None),
        Identifier(name = "x", meta = None)
      ),
      meta = None
    )
  ),
  result = None,
  meta = None
)